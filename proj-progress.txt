General:
Upon execution, if no entry for the day has been inputted ask for the quality of each
topic and save those to a file. If entry has been entered for the day, output message 
indicating that entry has been entered already. The program will have to read the time, 
day, and status of entry at the beginning of execution before prompting user input. 
On saturday - after 7 entries have been entered - the program will present plotted data 
with data analyses like averages, what and how many good days there were, highest and 
lowest rated days, and what areas of improvement are needed(?) The program should also 
be aware of any skipped days. If days are skipped, then it should just roll over to the 
next day.

01/31/2022 ==============


01/24/2022 ==============
I'm having a huge issue with logdate right now. I want to convert todays date into a char, but I end up converting them into random characters.

---
Stopping here, 
[] string logdate(void) - function member that reads and stores the current date
logdate is kind of a hassle right now. I think I can turn this into a char? But I think I would also have to change lastline into a char. 
[] bool logcheck(void) - function member that compares the last line and current date
[] void logentry(void) - function member that decides to write to log

---
Okay, in hindsight, I need to create more function members to do separate tasks. As of writing this - I only have logentry(), which opens the file, finds and stores the last line, gets the current date and outputs the date, then compares the last line and the date. 
What I should do: 
[x] void readlog(void) - function member that opens the file and reads and stores the last line

---
I think I'm settling with having the program read the last entry in the file, then write to the file by appending to the bottom.
[x] Read bottom
[x] Write to bottom

01/10/2022 ==============
I neeed to figure out one of the two: have the program read from the bottom of the file
or append to the beginning of the file. 
Note: there will be text between dates for the ratings. So that will influence where I
read from in the file. 
[x] Read date and report date
[x] Write to file